<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>BOBO的个人博客</title>
    <link>http://bobolife.github.io/</link>
    <description>Recent content on BOBO的个人博客</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-Hans</language>
    <lastBuildDate>Sat, 20 Jun 2020 16:52:35 +0800</lastBuildDate>
    
	<atom:link href="http://bobolife.github.io/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>第二篇博客</title>
      <link>http://bobolife.github.io/posts/hugo%E5%BF%AB%E9%80%9F%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/</link>
      <pubDate>Sat, 20 Jun 2020 16:52:35 +0800</pubDate>
      
      <guid>http://bobolife.github.io/posts/hugo%E5%BF%AB%E9%80%9F%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/</guid>
      <description>如何用hugo搭建个人博客 hugo的下载和配置 1.下载hugo 2.将下载下来的包解压缩后，放到&amp;quot;D:\Software\hugo&amp;rdquo;,此目录下只有&amp;quot;hugo.exe&amp;quot;文件。 3.配置环境变量，以便在全局使用hugo。 4.重启终端，运行hugo version命令，查看版本，见到下图说明成功。 看hugo文档快速搭建个人博客 1.进入Hugo官网，点击快速开始（quick start） 2.从Step2开始抄代码在终端运行，直至Step7（此文档步骤叙述十分详细，在此不再赘述） 3.在/public的上级目录中创建&amp;rdquo;.gitignore&amp;rdquo;，在此文件中将/public写入进去，这样public文件夹将单独成为一个不受影响的独立仓库。 4.cd进入/public文件夹，运行如下代码 git init git add . git commit -m &amp;quot;提示&amp;quot; //亦可（git commit -v） 5.在GitHub上创建一个仓库名字 bobolife.github.io (bobolife为我的GitHub账户名)，将本地仓库（public）和远程仓库关联起来。 运行下面两行代码（你的新建仓库会有，直接复制粘贴运行就行） ps： 1.在生成网站目录下（public的父级目录），运行
hugo new posts/第二篇博客.md 2.运行 hugo -D，得到新的 public 目录
3.进入 public 目录，执行一下操作
git add . 注意有一个点 git commit -m update git push -f 其中 -f 是强制上传的意思  4.等待片刻，博客会出现第二篇文章</description>
    </item>
    
    <item>
      <title>开博大吉</title>
      <link>http://bobolife.github.io/posts/%E5%BC%80%E5%8D%9A%E5%A4%A7%E5%90%89/</link>
      <pubDate>Sat, 20 Jun 2020 16:34:05 +0800</pubDate>
      
      <guid>http://bobolife.github.io/posts/%E5%BC%80%E5%8D%9A%E5%A4%A7%E5%90%89/</guid>
      <description>大家好 我的博客正式开通了，希望写出好的博客。</description>
    </item>
    
  </channel>
</rss>